"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const glob = require("glob");
exports.fsClosePromise = (fd) => new Promise((resolve, reject) => {
    fs_1.close(fd, (err) => {
        err ?
            reject(err) :
            resolve();
    });
});
exports.fsOpenPromise = (path, flags) => new Promise((resolve, reject) => {
    fs_1.open(path, flags, (err, fd) => {
        err ?
            reject(err) :
            resolve(fd);
    });
});
exports.globPromise = (pattern, options) => new Promise((resolve, reject) => {
    glob(pattern, options, (err, matches) => {
        if (err) {
            reject(err);
        }
        else {
            resolve(matches);
        }
    });
});
async function serialize(promise, promiseFactory) {
    const promiseResult = await promise;
    const promiseFactoryResult = await promiseFactory();
    return [...promiseResult, promiseFactoryResult];
}
exports.serialize = serialize;
function serializePromise(promiseFactories) {
    return promiseFactories.reduce(serialize, Promise.resolve([]));
}
exports.serializePromise = serializePromise;
async function writeArrayToFile(outputFile, data) {
    return new Promise((resolve, reject) => {
        const file = fs_1.createWriteStream(outputFile, {
            encoding: 'utf-8',
        });
        file.on('error', (err) => {
            reject(err);
        });
        data.forEach((item) => {
            file.write(`${item}\n`);
        });
        file.end();
        resolve();
    });
}
exports.writeArrayToFile = writeArrayToFile;
